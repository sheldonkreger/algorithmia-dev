<?php

/**
 * @file
 * Algorithmia primary module file.
 */

/**
 * Implements hook_block_info().
 */
function algorithmia_block_info() {
  $blocks = array();
  $blocks['algorithmia_recommender'] = array(
    'info' => t('Algorithmia Recommender'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'status' => 0,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function algorithmia_block_view($delta = '') {
  if ($delta == 'algorithmia_recommender') {
    $block['subject'] = 'Recommended Content';
    $block['content'] = _algorithmia_get_html();
  }
  return $block;
}

/**
 * Returns HTML and JavaScript for recommendation block.
 *
 * JavaScript file is provided by Algorithmia.
 */
function _algorithmia_get_html() {
  $api_key = variable_get('algorithmia_api_key');
  return '<div class="algorithmia-recommends"></div>
    <script src="//algorithmia.com/assets/javascripts/algorithmia-recommends.js"
    data-apikey="' . $api_key . '" data-uuid=
    "731509d0bcfa45c6b14b5927145d341e"></script>';
}

/**
 * Implements hook_menu().
 */
function algorithmia_menu() {
  $items['admin/config/system/algorithmia'] = array(
    'title' => 'Algorithmia',
    'description' => 'Configure Algorithmia API integration.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('algorithmia_admin_settings_form'),
    'access arguments' => array('administer algorithmia'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'algorithmia.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function algorithmia_permission() {
  return array(
    'administer algorithmia' => array(
      'title' => t('administer algorithmia'),
      'description' => t('Configure Algorithmia API integration.'),
    ),
  );
}

/**
 * Implements hook_file_operations().
 *
 * Display as a checkbox item in the admin view of files.
 */
function algorithmia_file_operations() {
  $enabled = variable_get('algorithmia_nudity');
  if ($enabled) {
    $operations = array(
      'nudity' => array(
        'label' => t('Scan for Nudity'),
        'callback' => 'algorithmia_validate_nudity',
      ),
    );
    return $operations;
  }
}

/**
 * Callback for algorithmia_file_operations().
 *
 * @Param $files: Array of files selected by the user to be checked for nudity.
 */
function algorithmia_validate_nudity($files) {
  foreach ($files as $file) {
    $file = file_load($file);
    if ($file->type == 'image') {
      $path = file_create_url($file->uri);
      $path = strval($path);
      $path = '"' . trim($path, '"') . '"';
      $url = 'https://api.algorithmia.com/v1/algo/sfw/NudityDetection/0.1.63';
      $key = variable_get('algorithmia_api_key');
      $options = array(
        'method' => 'POST',
        'data' => $path,
        'timeout' => 30,
        'headers' => array(
          'content-type' => 'application/json',
          'Authorization' => 'Simple ' . $key,
        ),
      );
      if ($response = drupal_http_request($url, $options)) {
        $json = json_decode($response->data);

        if (property_exists($json, 'error')) {
          watchdog('algorithmia', 'Return error from Algorithmia. JSON: ' . print_r($json, TRUE));
          drupal_set_message(t('Error in Algorithmia API. Link to image may be invalid.'));
          continue;
        }

        // Return value will contain 'Not' if the image is not a nude.
        if (strpos($json->result, 'Not') !== FALSE) {
          continue;
        }
        else {
          drupal_set_message(t('File may contain nudity: @path image.', array('@path' => $path)), 'warning');
        }
      }
    }
  }
}
